---
output: github_document
---

<!-- README.md is generated from README.Rmd. Please edit that file -->



```{r, echo = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  fig.path = "README-"
)
```

# syllabifyr <img src="man/figures/logo.png" align="right" />

[![Travis-CI Build Status](https://travis-ci.org/JoFrhwld/syllabifyr.svg?branch=master)](https://travis-ci.org/JoFrhwld/syllabifyr)[![CRAN_Status_Badge](http://www.r-pkg.org/badges/version/syllabifyr)](https://cran.r-project.org/package=syllabifyr)

The goal of syllabify is to provide tidy syllabification of phonetic transcriptions. So far, only CMU dict transcriptions are supported.

I've largely utilized the same approach as [Kyle Gorman's python implementation](https://github.com/kylebgorman/syllabify)

## Installation

`syllabifyr` is now on Cran

```{r cran-install, eval = F}
install.packages("syllabifyr")
```


You can also install `syllabifyr` from github with:

```{r gh-installation, eval = FALSE}
# install.packages("devtools")
devtools::install_github("JoFrhwld/syllabifyr")
```

## Example


```{r example}
library(syllabifyr)
syllabify("AO0 S T R EY1 L Y AH0")
syllabify(c("AO0", "S", "T", "R", "EY1", "L", "Y", "AH0"))
```


```{r tidy_example, message = F}
library(tidyverse)

syllabficiation <- tribble(~word, ~transcription,
                          "Alaska", "AH0 L AE1 S K AH0",
                          "constraint", "K AH0 N S T R EY1 N T",
                          "canyon", "K AE1 N Y AH0 N",
                          "value", "V AE1 L Y UW0")%>%
                        mutate(syllable_df = map(transcription, syllabify))
syllabficiation$syllable_df[[1]]
syllabficiation$syllable_df[[2]]
syllabficiation$syllable_df[[3]]
syllabficiation$syllable_df[[4]]
```



